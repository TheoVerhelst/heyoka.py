{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "eac3271e",
   "metadata": {},
   "source": [
    "# The wavy ramp\n",
    "\n",
    "In this example, we will integrate the dynamics of a point mass bouncing down a non-linear ramp. The point mass behaves like a rubber ball, meaning that at every bounce it will dissipate part of its kinetic energy due to the [inelastic](https://en.wikipedia.org/wiki/Inelastic_collision) character of the collisions.\n",
    "\n",
    "Let us begin, as usual, with the definition of the dynamics:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "553b9d9f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import heyoka as hy\n",
    "\n",
    "x, y, vx, vy = hy.make_vars(\"x\", \"y\", \"vx\", \"vy\")\n",
    "\n",
    "eqns = [(x, vx),\n",
    "        (y, vy),\n",
    "        (vx, hy.expression(0.)),\n",
    "        # Downwards constant acceleration.\n",
    "        (vy, hy.expression(-9.8))]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cbe82079",
   "metadata": {},
   "source": [
    "In other words, we are setting up a 2D dynamical system in which the only acceleration is due to the (constant) gravitational field.\n",
    "\n",
    "The contour of the ramp is defined by the non-linear equation\n",
    "\n",
    "$$\n",
    "y = 1 - x + 0.05 \\cos\\left(11 \\pi x \\right).\n",
    "$$\n",
    "\n",
    "Let us take a look:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7faf59f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib.pylab import plt\n",
    "import numpy as np\n",
    "plt.rcParams[\"figure.figsize\"] = (9,6)\n",
    "\n",
    "fig = plt.figure()\n",
    "x_grid = np.linspace(0, 1., 1000)\n",
    "plt.plot(x_grid, (1 - x_grid + 0.05 * np.cos(11 * np.pi * x_grid)), 'k-', linewidth=1)\n",
    "plt.fill_between(x_grid, -1., (1 - x_grid + 0.05 * np.cos(11 * np.pi * x_grid)), color='gray')\n",
    "plt.ylim(0, None);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a02d74cf",
   "metadata": {},
   "source": [
    "We want the particle to bounce off both the wavy ramp and the ground (i.e., $x$ axis). Thus, we will have to define two different event equations and two different callback functions to implement the bouncing behaviour. Let us begin with the event equations:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "04c9f0e8",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Event equation for the ramp.\n",
    "eq_w_curve = y - (1. - x + 0.05 * hy.cos(11 * np.pi * x))\n",
    "\n",
    "# Event equation for the ground.\n",
    "eq_bottom = y"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4479fba2",
   "metadata": {},
   "source": [
    "Next, we need to implement the callbacks. Because we are dealing with inelastic collisions, when the particle hits a surface it will lose part of its kinetic energy. The [coefficient of restitution](https://en.wikipedia.org/wiki/Coefficient_of_restitution) $C_R \\in \\left[0, 1\\right]$ regulates how much energy is lost at every bounce.\n",
    "\n",
    "Additionally, because of the loss of energy, the particle will experience increasingly frequent collisions if it gets stuck in one of the local minima of the curve or when it starts bouncing off the ground. In practice, we want to stop the simulation once the collisions become too frequent.\n",
    "\n",
    "Let us see the code:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c6a7ab81",
   "metadata": {},
   "outputs": [],
   "source": [
    "# The coefficient of restitution.\n",
    "CR = .8\n",
    "\n",
    "# Global variables to track\n",
    "# the time of the last collision\n",
    "# and the collision points.\n",
    "last_t = 0.\n",
    "bounce_points = []\n",
    "\n",
    "# Callback for bouncing against the curve.\n",
    "def cb_w_curve(ta, mr, d_sgn):\n",
    "    global last_t\n",
    "\n",
    "    # If the last collision happened\n",
    "    # too recently, return False to\n",
    "    # stop the simulation.\n",
    "    if ta.time - last_t < 1e-10:\n",
    "        return False\n",
    "\n",
    "    # Update last_t.\n",
    "    last_t = ta.time\n",
    "\n",
    "    # Update bounce_points.\n",
    "    x, y = ta.state[0:2]\n",
    "    bounce_points.append((x, y))\n",
    "    \n",
    "    # Compute the normal unit vector\n",
    "    # using the gradient of the event\n",
    "    # equation.\n",
    "    grad = np.array([1+0.05*11*np.pi*np.sin(11*np.pi*x), 1])\n",
    "    grad_uvec = grad / np.linalg.norm(grad)\n",
    "    \n",
    "    # Compute the component of the velocity\n",
    "    # across the normal vector.\n",
    "    xy_vel = ta.state[2:4]\n",
    "    vproj = np.dot(xy_vel, grad_uvec)\n",
    "    \n",
    "    # Flip it and rescale it according\n",
    "    # to the coefficient of restitution.\n",
    "    Dv = -vproj*grad_uvec\n",
    "    xy_vel += (1. + CR) * Dv\n",
    "\n",
    "    return True\n",
    "\n",
    "# Callback for bouncing off the ground.\n",
    "def cb_bottom(ta, mr, d_sgn):\n",
    "    global last_t\n",
    "\n",
    "    # If the last collision happened\n",
    "    # too recently, return False to\n",
    "    # stop the simulation.\n",
    "    if ta.time - last_t < 1e-10:\n",
    "        return False\n",
    "\n",
    "    # Update last_t.\n",
    "    last_t = ta.time\n",
    "\n",
    "    # Update bounce_points.\n",
    "    x, y = ta.state[0:2]\n",
    "    bounce_points.append((x, y))\n",
    "    \n",
    "    # Flip the y component of the velocity,\n",
    "    # and rescale it according\n",
    "    # to the coefficient of restitution.\n",
    "    ta.state[3] = -CR*ta.state[3]\n",
    "    \n",
    "    return True"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba77fb48",
   "metadata": {},
   "source": [
    "We are now ready to create the integrator object. As initial conditions, we will put the particle at rest above the ramp on the $y$ axis:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "285b4776",
   "metadata": {},
   "outputs": [],
   "source": [
    "ta = hy.taylor_adaptive(eqns, [0, 1.2, 0, 0], t_events = [hy.t_event(eq_w_curve, callback = cb_w_curve, direction = hy.event_direction.negative),\n",
    "                                                          hy.t_event(eq_bottom, callback = cb_bottom, direction = hy.event_direction.negative)])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7b95f4e",
   "metadata": {},
   "source": [
    "Note how, as explained in the [Keplerian billiard](<./The Keplerian billiard.ipynb>) example, we assigned specific directions to the collision events. This is done in order to avoid triggering spurious double-bounce events that would lead to the particle penetrating through the ramp or the ground.\n",
    "\n",
    "We can now integrate the system for a few time units:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a1fab993",
   "metadata": {},
   "outputs": [],
   "source": [
    "t_grid = np.linspace(0, 10, 10000)\n",
    "oc, _, _, _, res = ta.propagate_grid(t_grid)\n",
    "\n",
    "# Transform bounce_points in a NumPy array\n",
    "# for ease of use.\n",
    "b_points = np.array(bounce_points)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c503814",
   "metadata": {},
   "source": [
    "Let us take a look at the trajectory:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "cff0eff9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAsMAAAIICAYAAACLo+M1AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Z1A+gAAAACXBIWXMAAAsTAAALEwEAmpwYAAB400lEQVR4nO3dd3xV9f0/8Nfn7uxxV/YiAcLeGxQQEZXirlpHbeuoVWu/Hbb9ttpvWzt/HbZq666j7oGoqCii7JEACSEBEiB7J2SPu87vj5uE7Nwk5w5yX8/Hw0e595zzOZ/cXvHFh/d5f4QkSSAiIiIi8kcKb0+AiIiIiMhbGIaJiIiIyG8xDBMRERGR32IYJiIiIiK/xTBMRERERH6LYZiIiIiI/JbKWzc2GAxSUlKSt25PRERERH4iMzOzVpIk42DHvBaGk5KSkJGR4a3bExEREZGfEEIUDXWMZRJERERE5LcYhomIiIjIbzEMExEREZHfYhgmIiIiIr/FMExEREREfothmIiIiIj8FsMwEREREfkthmEiIiIi8lsMw0RERETktxiGiYiIiMhvMQwTERERkd9iGCYiIiIiv8UwTERERER+i2GYiIiIiPwWwzARERER+S2GYSIiIiLyWwzDREREROS3GIaJiIiIyG8xDBMRERGR32IYJiIiIiK/xTBMRERERH6LYZiIiIiI/BbDMBERERH5LYZhIiIiIvJbDMNERERE5LcYhomIiIjIbzEMExEREZHfYhgmIiIiIr/FMExEREREfothmIiIiIj8FsMwEREREfkthmEiIiIi8lsMw0RERETktxiGiYiIiMhvMQwTERERkd8aMQwLIZ4XQlQLIXKGOP4NIUR21z97hRCz5Z8mEREREZH8XFkZ/g+Ay4Y5fhbARZIkzQLwGwBPyzAvIiIiIiK3GzEMS5K0E0D9MMf3SpJ0ruvlfgBxMs1Ndja7AxWN7Wiz2Lw9FSIiIiLyAXLXDH8bwMcyjymb6uZOLP39F/ggq9zbUyEiIiIiH6CSayAhxGo4w/CKYc65C8BdAJCQkCDXrYmIiIiIxkSWlWEhxCwAzwLYJElS3VDnSZL0tCRJCyRJWmA0GuW4NRERERHRmI07DAshEgC8C+BWSZJOjX9KRERERESeMWKZhBDiNQAXAzAIIUoBPAJADQCSJP0bwMMA9ACeFEIAgE2SpAXumjARERERkVxGDMOSJN00wvHvAPiObDMiIiIiIvIQ7kBHRERERH6LYZiIiIiI/BbDMBERERH5LYZhIiIiIvJbDMNERERE5LcYhomIiIjIbzEMExEREZHfYhgmIiIiIr/FMExEREREfothmIiIiIj8FsMwEREREfkthmEiIiIi8lt+GYYlydszICIiIiJf4FdhWAhvz4CIiIiIfIlfhWEiIiIiot4YhomIiIjIbzEMExEREZHfYhgmIiIiIr/FMExEREREfothmIiIiIj8FsMwEREREfkthmEiIiIi8lsMw0RERETktxiGiYiIiMhvMQwTERERkd9iGCYiIiIiv8UwTERERER+i2GYiIiIiPwWwzARERER+S2GYSIiIiLyWwzDREREROS3/DIMS96eABERERH5BL8KwwLC21MgIiIiIh/iV2GYiIiIiKg3hmEiIiIi8lsMw0RERETktxiGiYiIiMhvMQwTERERkd9iGCYiIiIiv8UwTERERER+i2GYiIiIiPwWwzARERER+S2GYSIiIiLyWwzDREREROS3GIaJiIiIyG8xDBMRERGR32IYJiIiIiK/xTBMRERERH7Lr8KwLu8d7NY8gBu3zgL+NgPIftPbUyIiIiIiL1J5ewIek/0mQj//IcIV7c7XjSXABw84fz3rBu/Ni4iIiIi8xn9Whrf/Ggpbe9/3rO3A9l97Zz5ERERE5HX+E4YbSwd929FYit35tR6eDBERERH5Av8Jw2Fxg75dBQNuee4Abn3uAPKrmj08KSIiIiLyJv8Jw2sfBtQBfd9TB8Bw1W/xiyvSkV3aiCv+sRuPf5EPq93hnTkSERERkUf5TxiedQOw8R9oFGFwSECtLQDY+A+o59yI76xMwfYfXoR10834f9tO4aan96OqqcPbMyYiIiIiN/OfMAwAs27A04H3447Cq7DgFV2fLhKGYC2euHkeHrtxDnIrmnDFP3bjwJk6L06WiIiIiNzNv8Jwl4SEBFRUVKC8vHzAsU1zYrH5e8sRqlPh1ucOYuuxCi/MkIiIiIg8wS/DsEqlQnx8PN5///1Bj082h+C9e5djVlwYvvfqYby8v8jDMyQiIiIiT/DLMAwA8fHx2L59+5DHwwLVePnbi7F2qgm/3JyDF/cWem5yREREROQRfhuGExMTkZmZOew5ARol/nXLfKybZsYjW47jjUPFHpodEREREXmC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qjERERH5F4Zh8rrY2FhUVlbi3Llz4x6rp9fwIHXDlp4w3G9lWMk+w0RERP6KYZi8TqVSISYmBlu3bh33WN270A22MmzrKoUYEIbZTYKIiMhvMQyTT4iPj8dnn302qmscDgeeffZZ/PznP0dRUREAZ2s1YPRlEuwmQURE5J9U3p4AEeAMw/v27XP5/La2NqxatQqlpaUwmUx48skn8fnnn2PBggUI0akG7ShhHaJMQq1UDPrAHREREU18XBkmn5CYmIjCwkLU19ePeK4kSbjyyivR2tqKO++8E9deey2WLFmC66+/HjabDVGhg/catjmGLpOwsJsEERGRX2IYJp+g1WqRkJCA119/fcRzH3vsMRw7dgzXXHMNVCrnX24sWbIENpsNf//7350bbwxTJqHqVyahUSpgsdll+Cncq6XThsyic/gstwqf5VYhp6wRHVbfnzcREZEvY5kE+YxJkyZh8+bNuPfee4c8p6ysDI888giuvfZaaDSanveFEFixYgWeeOIJXPundSiorh1wbXcvYbWif5mE8Nk+wxabA5uPluGdzFIcLKyH1G+aAWollqcacMuSBFw02QghxOADERER0aAYhslnTJkyBc899xw6Ojqg0+kGPee2225Deno6EhMTBxxLS0vDRx99hLayE6huDoHdIUGpOB8Oe2qGVf1Whn20m8S245X4vw9yUdbQjhRjEO5bnYrZceEwh+rgkCSUnmvHwbN12JpTic9fqMLs+HD8ZtN0zIoL9/bUiYiILhgskyCfERkZCaPRiOeee27Q42+99RYyMjKwZs2aQY8rlUrMnj0bWZ+/B7tDQl1L34fobN1lEgNWhn2rm0SbxYYfvHEUd72ciRCdCi98cyG2/89F+OGlU3DJNDNmxoVhdnw4rpgVjf/bNAN7HlqDP103C+UN7bjqiT14YkcBHA7fXOkmIiLyNQzD5FNmz56Np59+esD7ra2tuO+++7BhwwZotdohr588eTJOZOwGAFT16yjRUyYxWGs1H1kZrmzswA1P7cP7R8vw/bVp2HLfCqyeahq2/EGjUuCGBfH44ocX4cpZMfjzpydx9yuZrCcmIiJyAcMw+ZQZM2agsLAQH374YZ/3b731VhgMBqSnpw97fVxcHDpaGmFtqBzwEJ3V7oBKIQYES62PlEmUN7Tjun/vRWFtG569fQF+sG4yNCrX/xUN0anx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\n",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams[\"figure.figsize\"] = (12,9)\n",
    "fig = plt.figure()\n",
    "plt.plot(res[:,0],res[:,1])\n",
    "x_grid = np.linspace(0, 1., 1000)\n",
    "plt.plot(x_grid, (1 - x_grid + 0.05 * np.cos(11 * np.pi * x_grid)), 'k-', linewidth=1)\n",
    "plt.plot(b_points[:, 0], b_points[:, 1], 'o')\n",
    "plt.fill_between(x_grid, -1., (1 - x_grid + 0.05 * np.cos(11 * np.pi * x_grid)), color='gray')\n",
    "plt.ylim(0, None);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d39bab91",
   "metadata": {},
   "source": [
    "We can clearly see the dissipative behaviour of the inelastic collisions at play. Indeed, despite the fact that we asked to integrate the system up to $t=10$, the integration was stopped at"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f75d9d74",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4.739023056879299"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ta.time"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a619f29",
   "metadata": {},
   "source": [
    "instead, and the outcome ``oc`` informs us that the integration was stopped because of a stopping terminal event:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "935109c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<taylor_outcome.???: -2>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "oc"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09145c42",
   "metadata": {},
   "source": [
    "A value of ``oc`` negative and greater than ``taylor_outcome.success`` indicates a stopping terminal event. The index of the stopping terminal event is ``-oc - 1``:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ba9dc815",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Stopped by terminal event? True\n",
      "Index of the terminal event: 1\n"
     ]
    }
   ],
   "source": [
    "print(\"Stopped by terminal event? {}\".format(oc > hy.taylor_outcome.success and int(oc) < 0))\n",
    "print(\"Index of the terminal event: {}\".format(-int(oc)-1))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
